name: Cypress Tests

on: [push]

jobs:
  test-cypress:
    runs-on: ubuntu-latest
    # Service containers to run with `test-cypress`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      redis:
        # Docker Hub image
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "11"
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: db-setup
        run: |
          cat << EOF > ~/.pgpass
          $PGHOST:$PGPORT:$PGDATABASE:$PGUSER:$PGPASSWORD
          EOF
          chmod 600 ~/.pgpass

          createdb $PGDATABASE
          pg_restore -d $PGDATABASE cypress/postgres_1MB_testdata_denormalized.sql

        env:
          PGPASSWORD: postgres
          PGHOST: 127.0.0.1
          PGPORT: 5432
          PGDATABASE: _test_
          PGUSER: postgres
      - name: Cypress run
        uses: cypress-io/github-action@v5.0.0
        with:
          build: npm run build
          start: npm run start:coverage
          wait-on: "http://localhost:8080"
          browser: chrome
        env:
          CYPRESS_FRONTEND_BASEURL: "http://localhost:8080"
          CYPRESS_BACKEND_BASEURL: "http://localhost:8080"
          PGPASSWORD: postgres
          PGHOST: 127.0.0.1
          PGPORT: 5432
          PGDATABASE: _test_
          PGUSER: postgres
          DB_TYPE: postgres
          DB_PASSFILE: ~/.pgpass
          PORT: 8080
      - name: Upload screenshots
        uses: actions/upload-artifact@v2.2.4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Upload videos
        uses: actions/upload-artifact@v2.2.4
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
  docker-upload:
      runs-on: ubuntu-latest
      needs: test-cypress
      if: github.ref == 'refs/heads/main'
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v3
          with:
            context: .
            push: true
            platforms: linux/amd64,linux/arm64
            tags: pvii/bcnfstar:latest,pvii/cnfstar:${{github.sha}}
